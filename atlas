#!/usr/bin/env python3

import time
import argparse
import importlib
import websockets
import telescope
import imqueue
import modules.status as status
import modules.resource as resource
import logging
import colorlog
import multiprocessing
from config import config

### Create command-line parser ###
parser = argparse.ArgumentParser(description='Interface and control an Atlas infrastructure')
subparsers = parser.add_subparsers(title='subcommands', dest='subparser')

### Create a sub parser to start components
server_parser = subparsers.add_parser('start', help="Start Atlas server components")
server_parser.add_argument('server', nargs='+', help='The Atlas server or module to start')
server_parser.add_argument('--no-authentication', help='Disable authentication for server components', action='store_false')

### Parse!
args = parser.parse_args()

########################################
#  ___  ___ _ ____   _____ _ __
# / __|/ _ \ '__\ \ / / _ \ '__|
# \__ \  __/ |   \ V /  __/ |
# |___/\___|_|    \_/ \___|_|
# server

if args.subparser == 'start':

    # start the telescope server
    if 'telescope' in args.server:
        t = telescope.TelescopeServer(authentication=args.no_authentication)
        p = multiprocessing.Process(target=t.start)
        p.start()
        args.server.remove('telescope')
    # start the queue executor
    if 'executor' in args.server:
        p = multiprocessing.Process(target=imqueue.Executor)
        p.start()
        args.server.remove('executor')
    if 'status' in args.server:
        p = multiprocessing.Process(target=status.StatusServer)
        p.start()
        args.server.remove('status')
    if 'resource' in args.server:
        p = multiprocessing.Process(target=resource.ResourceServer)
        p.start()
        args.server.remove('resource')

    # try and import each server from the modules.user directory and start it
    if args.server is not []:
        for server in args.server:
            server = importlib.import_module(f'modules.user.{server}')
            p = multiprocessing.Process(target=server.Server)
            p.start()

########################################
